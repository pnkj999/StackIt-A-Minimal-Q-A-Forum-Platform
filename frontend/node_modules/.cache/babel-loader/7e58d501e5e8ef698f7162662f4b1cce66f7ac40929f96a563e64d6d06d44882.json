{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Downloads/stackit/frontend/src/components/Answers/AnswerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport toast from 'react-hot-toast';\nimport RichTextEditor from '../Editor/RichTextEditor';\nimport Button from '../UI/Button';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerForm = ({\n  questionId,\n  onSuccess\n}) => {\n  _s();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    getAuthHeader\n  } = useAuth();\n  const queryClient = useQueryClient();\n  const createAnswerMutation = useMutation({\n    mutationFn: async answerData => {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/answers`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...getAuthHeader()\n        },\n        body: JSON.stringify(answerData)\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create answer');\n      }\n      return response.json();\n    },\n    onSuccess: data => {\n      toast.success('Answer posted successfully!');\n      queryClient.invalidateQueries(['question', questionId]);\n      reset();\n      if (onSuccess) onSuccess(data);\n    },\n    onError: error => {\n      toast.error(error.message);\n    }\n  });\n  const onSubmit = async data => {\n    if (!data.content || data.content.trim() === '<p><br></p>') {\n      toast.error('Please provide an answer');\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      await createAnswerMutation.mutateAsync({\n        ...data,\n        questionId: parseInt(questionId)\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-gray-900 mb-4\",\n      children: \"Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: \"content\",\n          control: control,\n          rules: {\n            required: 'Answer content is required',\n            minLength: {\n              value: 20,\n              message: 'Answer must be at least 20 characters'\n            }\n          },\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(RichTextEditor, {\n            value: field.value || '',\n            onChange: field.onChange,\n            placeholder: \"Write your answer here. Be clear and provide examples if possible.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), errors.content && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-1 text-sm text-red-600\",\n          children: errors.content.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting,\n          className: \"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\",\n          children: isSubmitting ? 'Posting...' : 'Post Your Answer'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(AnswerForm, \"WHDf0UMrlNiBJICUtYu76fz9/pI=\", false, function () {\n  return [useForm, useAuth, useQueryClient, useMutation];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["React","useState","useForm","Controller","useMutation","useQueryClient","toast","RichTextEditor","Button","useAuth","jsxDEV","_jsxDEV","AnswerForm","questionId","onSuccess","_s","control","handleSubmit","formState","errors","reset","isSubmitting","setIsSubmitting","getAuthHeader","queryClient","createAnswerMutation","mutationFn","answerData","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","error","json","Error","data","success","invalidateQueries","onError","message","onSubmit","content","trim","mutateAsync","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","rules","required","minLength","value","render","field","onChange","placeholder","type","disabled","_c","$RefreshReg$"],"sources":["/Users/sam/Downloads/stackit/frontend/src/components/Answers/AnswerForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport toast from 'react-hot-toast';\nimport RichTextEditor from '../Editor/RichTextEditor';\nimport Button from '../UI/Button';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst AnswerForm = ({ questionId, onSuccess }) => {\n    const { control, handleSubmit, formState: { errors }, reset } = useForm();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const { getAuthHeader } = useAuth();\n    const queryClient = useQueryClient();\n\n    const createAnswerMutation = useMutation({\n        mutationFn: async (answerData) => {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/answers`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...getAuthHeader()\n                },\n                body: JSON.stringify(answerData)\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || 'Failed to create answer');\n            }\n\n            return response.json();\n        },\n        onSuccess: (data) => {\n            toast.success('Answer posted successfully!');\n            queryClient.invalidateQueries(['question', questionId]);\n            reset();\n            if (onSuccess) onSuccess(data);\n        },\n        onError: (error) => {\n            toast.error(error.message);\n        }\n    });\n\n    const onSubmit = async (data) => {\n        if (!data.content || data.content.trim() === '<p><br></p>') {\n            toast.error('Please provide an answer');\n            return;\n        }\n\n        setIsSubmitting(true);\n        try {\n            await createAnswerMutation.mutateAsync({\n                ...data,\n                questionId: parseInt(questionId)\n            });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Your Answer</h3>\n            \n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n                <div>\n                    <Controller\n                        name=\"content\"\n                        control={control}\n                        rules={{ \n                            required: 'Answer content is required',\n                            minLength: { value: 20, message: 'Answer must be at least 20 characters' }\n                        }}\n                        render={({ field }) => (\n                            <RichTextEditor\n                                value={field.value || ''}\n                                onChange={field.onChange}\n                                placeholder=\"Write your answer here. Be clear and provide examples if possible.\"\n                            />\n                        )}\n                    />\n                    {errors.content && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.content.message}</p>\n                    )}\n                </div>\n\n                <div className=\"flex justify-end\">\n                    <Button\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                    >\n                        {isSubmitting ? 'Posting...' : 'Post Your Answer'}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default AnswerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}