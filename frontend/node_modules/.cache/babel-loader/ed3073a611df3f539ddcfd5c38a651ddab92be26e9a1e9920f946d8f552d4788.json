{"ast":null,"code":"import React,{useState}from'react';import{useForm,Controller}from'react-hook-form';import{useMutation,useQueryClient}from'@tanstack/react-query';import toast from'react-hot-toast';import RichTextEditor from'../Editor/RichTextEditor';import Button from'../UI/Button';import{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AnswerForm=_ref=>{let{questionId,onSuccess}=_ref;const{control,handleSubmit,formState:{errors},reset}=useForm();const[isSubmitting,setIsSubmitting]=useState(false);const{getAuthHeader}=useAuth();const queryClient=useQueryClient();const createAnswerMutation=useMutation({mutationFn:async answerData=>{const response=await fetch(`${process.env.REACT_APP_API_URL}/api/answers`,{method:'POST',headers:{'Content-Type':'application/json',...getAuthHeader()},body:JSON.stringify(answerData)});if(!response.ok){const error=await response.json();throw new Error(error.error||'Failed to create answer');}return response.json();},onSuccess:data=>{toast.success('Answer posted successfully!');queryClient.invalidateQueries(['question',questionId]);reset();if(onSuccess)onSuccess(data);},onError:error=>{toast.error(error.message);}});const onSubmit=async data=>{if(!data.content||data.content.trim()==='<p><br></p>'){toast.error('Please provide an answer');return;}setIsSubmitting(true);try{await createAnswerMutation.mutateAsync({...data,questionId:parseInt(questionId)});}finally{setIsSubmitting(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-4\",children:\"Your Answer\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Controller,{name:\"content\",control:control,rules:{required:'Answer content is required',minLength:{value:20,message:'Answer must be at least 20 characters'}},render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/_jsx(RichTextEditor,{value:field.value||'',onChange:field.onChange,placeholder:\"Write your answer here. Be clear and provide examples if possible.\"});}}),errors.content&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.content.message})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSubmitting,className:\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\",children:isSubmitting?'Posting...':'Post Your Answer'})})]})]});};export default AnswerForm;","map":{"version":3,"names":["React","useState","useForm","Controller","useMutation","useQueryClient","toast","RichTextEditor","Button","useAuth","jsx","_jsx","jsxs","_jsxs","AnswerForm","_ref","questionId","onSuccess","control","handleSubmit","formState","errors","reset","isSubmitting","setIsSubmitting","getAuthHeader","queryClient","createAnswerMutation","mutationFn","answerData","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","error","json","Error","data","success","invalidateQueries","onError","message","onSubmit","content","trim","mutateAsync","parseInt","className","children","name","rules","required","minLength","value","render","_ref2","field","onChange","placeholder","type","disabled"],"sources":["/Users/sam/Downloads/stackit/frontend/src/components/Answers/AnswerForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport toast from 'react-hot-toast';\nimport RichTextEditor from '../Editor/RichTextEditor';\nimport Button from '../UI/Button';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst AnswerForm = ({ questionId, onSuccess }) => {\n    const { control, handleSubmit, formState: { errors }, reset } = useForm();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const { getAuthHeader } = useAuth();\n    const queryClient = useQueryClient();\n\n    const createAnswerMutation = useMutation({\n        mutationFn: async (answerData) => {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/answers`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    ...getAuthHeader()\n                },\n                body: JSON.stringify(answerData)\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || 'Failed to create answer');\n            }\n\n            return response.json();\n        },\n        onSuccess: (data) => {\n            toast.success('Answer posted successfully!');\n            queryClient.invalidateQueries(['question', questionId]);\n            reset();\n            if (onSuccess) onSuccess(data);\n        },\n        onError: (error) => {\n            toast.error(error.message);\n        }\n    });\n\n    const onSubmit = async (data) => {\n        if (!data.content || data.content.trim() === '<p><br></p>') {\n            toast.error('Please provide an answer');\n            return;\n        }\n\n        setIsSubmitting(true);\n        try {\n            await createAnswerMutation.mutateAsync({\n                ...data,\n                questionId: parseInt(questionId)\n            });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Your Answer</h3>\n            \n            <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n                <div>\n                    <Controller\n                        name=\"content\"\n                        control={control}\n                        rules={{ \n                            required: 'Answer content is required',\n                            minLength: { value: 20, message: 'Answer must be at least 20 characters' }\n                        }}\n                        render={({ field }) => (\n                            <RichTextEditor\n                                value={field.value || ''}\n                                onChange={field.onChange}\n                                placeholder=\"Write your answer here. Be clear and provide examples if possible.\"\n                            />\n                        )}\n                    />\n                    {errors.content && (\n                        <p className=\"mt-1 text-sm text-red-600\">{errors.content.message}</p>\n                    )}\n                </div>\n\n                <div className=\"flex justify-end\">\n                    <Button\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                    >\n                        {isSubmitting ? 'Posting...' : 'Post Your Answer'}\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default AnswerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}