{"ast":null,"code":"import React,{useState}from'react';import{useForm}from'react-hook-form';import{Link,useNavigate}from'react-router-dom';import{useMutation}from'@tanstack/react-query';import toast from'react-hot-toast';import{useAuth}from'../../contexts/AuthContext';import Input from'../UI/Input';import Button from'../UI/Button';import LoadingSpinner from'../UI/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const{register,handleSubmit,watch,formState:{errors}}=useForm();const[isLoading,setIsLoading]=useState(false);const{login}=useAuth();const navigate=useNavigate();const password=watch('password');const registerMutation=useMutation({mutationFn:async userData=>{const response=await fetch(`${process.env.REACT_APP_API_URL}/api/auth/register`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok){const error=await response.json();throw new Error(error.error||'Registration failed');}return response.json();},onSuccess:data=>{login(data.token,data.user);navigate('/');},onError:error=>{toast.error(error.message);}});const onSubmit=async data=>{setIsLoading(true);try{const{confirmPassword,...registrationData}=data;await registerMutation.mutateAsync(registrationData);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md w-full space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mt-6 text-center text-3xl font-extrabold text-gray-900\",children:\"Create your account\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-2 text-center text-sm text-gray-600\",children:[\"Or\",' ',/*#__PURE__*/_jsx(Link,{to:\"/login\",className:\"font-medium text-blue-600 hover:text-blue-500\",children:\"sign in to your existing account\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"mt-8 space-y-6\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:\"block text-sm font-medium text-gray-700\",children:\"Username\"}),/*#__PURE__*/_jsx(Input,{id:\"username\",type:\"text\",autoComplete:\"username\",...register('username',{required:'Username is required',minLength:{value:3,message:'Username must be at least 3 characters'},maxLength:{value:30,message:'Username must be less than 30 characters'},pattern:{value:/^[a-zA-Z0-9]+$/,message:'Username can only contain letters and numbers'}}),className:`mt-1 block w-full ${errors.username?'border-red-500':''}`}),errors.username&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.username.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"block text-sm font-medium text-gray-700\",children:\"Email address\"}),/*#__PURE__*/_jsx(Input,{id:\"email\",type:\"email\",autoComplete:\"email\",...register('email',{required:'Email is required',pattern:{value:/\\S+@\\S+\\.\\S+/,message:'Please enter a valid email address'}}),className:`mt-1 block w-full ${errors.email?'border-red-500':''}`}),errors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.email.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block text-sm font-medium text-gray-700\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{id:\"password\",type:\"password\",autoComplete:\"new-password\",...register('password',{required:'Password is required',minLength:{value:8,message:'Password must be at least 8 characters'},pattern:{value:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,message:'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'}}),className:`mt-1 block w-full ${errors.password?'border-red-500':''}`}),errors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.password.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",className:\"block text-sm font-medium text-gray-700\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Input,{id:\"confirmPassword\",type:\"password\",autoComplete:\"new-password\",...register('confirmPassword',{required:'Please confirm your password',validate:value=>value===password||'Passwords do not match'}),className:`mt-1 block w-full ${errors.confirmPassword?'border-red-500':''}`}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.confirmPassword.message})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isLoading,className:\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\",children:isLoading?/*#__PURE__*/_jsx(LoadingSpinner,{}):'Create Account'})})]})]})});};export default Register;","map":{"version":3,"names":["React","useState","useForm","Link","useNavigate","useMutation","toast","useAuth","Input","Button","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","Register","register","handleSubmit","watch","formState","errors","isLoading","setIsLoading","login","navigate","password","registerMutation","mutationFn","userData","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","error","json","Error","onSuccess","data","token","user","onError","message","onSubmit","confirmPassword","registrationData","mutateAsync","className","children","to","htmlFor","id","type","autoComplete","required","minLength","value","maxLength","pattern","username","email","validate","disabled"],"sources":["/Users/sam/Downloads/stackit/frontend/src/components/Auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Input from '../UI/Input';\nimport Button from '../UI/Button';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst Register = () => {\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const [isLoading, setIsLoading] = useState(false);\n    const { login } = useAuth();\n    const navigate = useNavigate();\n\n    const password = watch('password');\n\n    const registerMutation = useMutation({\n        mutationFn: async (userData) => {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/register`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(userData),\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || 'Registration failed');\n            }\n\n            return response.json();\n        },\n        onSuccess: (data) => {\n            login(data.token, data.user);\n            navigate('/');\n        },\n        onError: (error) => {\n            toast.error(error.message);\n        },\n    });\n\n    const onSubmit = async (data) => {\n        setIsLoading(true);\n        try {\n            const { confirmPassword, ...registrationData } = data;\n            await registerMutation.mutateAsync(registrationData);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8\">\n                <div>\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n                        Create your account\n                    </h2>\n                    <p className=\"mt-2 text-center text-sm text-gray-600\">\n                        Or{' '}\n                        <Link\n                            to=\"/login\"\n                            className=\"font-medium text-blue-600 hover:text-blue-500\"\n                        >\n                            sign in to your existing account\n                        </Link>\n                    </p>\n                </div>\n                <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"space-y-4\">\n                        <div>\n                            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                                Username\n                            </label>\n                            <Input\n                                id=\"username\"\n                                type=\"text\"\n                                autoComplete=\"username\"\n                                {...register('username', {\n                                    required: 'Username is required',\n                                    minLength: {\n                                        value: 3,\n                                        message: 'Username must be at least 3 characters',\n                                    },\n                                    maxLength: {\n                                        value: 30,\n                                        message: 'Username must be less than 30 characters',\n                                    },\n                                    pattern: {\n                                        value: /^[a-zA-Z0-9]+$/,\n                                        message: 'Username can only contain letters and numbers',\n                                    },\n                                })}\n                                className={`mt-1 block w-full ${errors.username ? 'border-red-500' : ''}`}\n                            />\n                            {errors.username && (\n                                <p className=\"mt-1 text-sm text-red-600\">{errors.username.message}</p>\n                            )}\n                        </div>\n                        <div>\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                                Email address\n                            </label>\n                            <Input\n                                id=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                {...register('email', {\n                                    required: 'Email is required',\n                                    pattern: {\n                                        value: /\\S+@\\S+\\.\\S+/,\n                                        message: 'Please enter a valid email address',\n                                    },\n                                })}\n                                className={`mt-1 block w-full ${errors.email ? 'border-red-500' : ''}`}\n                            />\n                            {errors.email && (\n                                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n                            )}\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                                Password\n                            </label>\n                            <Input\n                                id=\"password\"\n                                type=\"password\"\n                                autoComplete=\"new-password\"\n                                {...register('password', {\n                                    required: 'Password is required',\n                                    minLength: {\n                                        value: 8,\n                                        message: 'Password must be at least 8 characters',\n                                    },\n                                    pattern: {\n                                        value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n                                        message: 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character',\n                                    },\n                                })}\n                                className={`mt-1 block w-full ${errors.password ? 'border-red-500' : ''}`}\n                            />\n                            {errors.password && (\n                                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n                            )}\n                        </div>\n                        <div>\n                            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                                Confirm Password\n                            </label>\n                            <Input\n                                id=\"confirmPassword\"\n                                type=\"password\"\n                                autoComplete=\"new-password\"\n                                {...register('confirmPassword', {\n                                    required: 'Please confirm your password',\n                                    validate: (value) =>\n                                        value === password || 'Passwords do not match',\n                                })}\n                                className={`mt-1 block w-full ${errors.confirmPassword ? 'border-red-500' : ''}`}\n                            />\n                            {errors.confirmPassword && (\n                                <p className=\"mt-1 text-sm text-red-600\">{errors.confirmPassword.message}</p>\n                            )}\n                        </div>\n                    </div>\n\n                    <div>\n                        <Button\n                            type=\"submit\"\n                            disabled={isLoading}\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n                        >\n                            {isLoading ? <LoadingSpinner /> : 'Create Account'}\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}