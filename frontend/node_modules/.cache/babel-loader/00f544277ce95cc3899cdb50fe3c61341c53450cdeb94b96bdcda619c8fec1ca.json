{"ast":null,"code":"// frontend/src/components/Editor/RichTextEditor.js (continued)\nimport React,{useRef,useEffect,useState}from'react';import Quill from'quill';import'quill/dist/quill.snow.css';import{useAuth}from'../../contexts/AuthContext';import toast from'react-hot-toast';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RichTextEditor=_ref=>{let{value,onChange,placeholder=\"Write your content here...\"}=_ref;const editorRef=useRef(null);const quillRef=useRef(null);const[isUploading,setIsUploading]=useState(false);const{getAuthHeader}=useAuth();useEffect(()=>{if(!quillRef.current){// Initialize Quill\nquillRef.current=new Quill(editorRef.current,{theme:'snow',placeholder:placeholder,modules:{toolbar:{container:[[{'header':[1,2,3,false]}],['bold','italic','underline','strike'],[{'list':'ordered'},{'list':'bullet'}],[{'align':[]}],['link','image','code-block'],['clean']],handlers:{image:imageHandler}}},formats:['header','bold','italic','underline','strike','list','bullet','align','link','image','code-block']});// Handle text changes\nquillRef.current.on('text-change',()=>{const html=quillRef.current.root.innerHTML;onChange(html);});}// Set initial content\nif(value&&quillRef.current.root.innerHTML!==value){quillRef.current.root.innerHTML=value;}},[value,onChange,placeholder]);const imageHandler=()=>{const input=document.createElement('input');input.setAttribute('type','file');input.setAttribute('accept','image/*');input.click();input.onchange=async()=>{const file=input.files[0];if(file){if(file.size>5*1024*1024){// 5MB limit\ntoast.error('Image size must be less than 5MB');return;}setIsUploading(true);const formData=new FormData();formData.append('image',file);try{const response=await fetch(`${process.env.REACT_APP_API_URL}/api/upload`,{method:'POST',body:formData,headers:{...getAuthHeader()}});if(response.ok){const data=await response.json();const range=quillRef.current.getSelection();quillRef.current.insertEmbed(range.index,'image',data.url);toast.success('Image uploaded successfully');}else{throw new Error('Upload failed');}}catch(error){console.error('Image upload failed:',error);toast.error('Failed to upload image');}finally{setIsUploading(false);}}};};return/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg border border-gray-300\",children:/*#__PURE__*/_jsx(\"div\",{ref:editorRef,className:\"h-64\"})}),isUploading&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mt-2\",children:\"Uploading image...\"})]})})]});};export default RichTextEditor;","map":{"version":3,"names":["React","useRef","useEffect","useState","Quill","useAuth","toast","jsx","_jsx","jsxs","_jsxs","RichTextEditor","_ref","value","onChange","placeholder","editorRef","quillRef","isUploading","setIsUploading","getAuthHeader","current","theme","modules","toolbar","container","handlers","image","imageHandler","formats","on","html","root","innerHTML","input","document","createElement","setAttribute","click","onchange","file","files","size","error","formData","FormData","append","response","fetch","process","env","REACT_APP_API_URL","method","body","headers","ok","data","json","range","getSelection","insertEmbed","index","url","success","Error","console","className","children","ref"],"sources":["/Users/sam/Downloads/stackit/frontend/src/components/Editor/RichTextEditor.js"],"sourcesContent":["// frontend/src/components/Editor/RichTextEditor.js (continued)\nimport React, { useRef, useEffect, useState } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport { useAuth } from '../../contexts/AuthContext';\nimport toast from 'react-hot-toast';\n\nconst RichTextEditor = ({ value, onChange, placeholder = \"Write your content here...\" }) => {\n    const editorRef = useRef(null);\n    const quillRef = useRef(null);\n    const [isUploading, setIsUploading] = useState(false);\n    const { getAuthHeader } = useAuth();\n\n    useEffect(() => {\n        if (!quillRef.current) {\n            // Initialize Quill\n            quillRef.current = new Quill(editorRef.current, {\n                theme: 'snow',\n                placeholder: placeholder,\n                modules: {\n                    toolbar: {\n                        container: [\n                            [{ 'header': [1, 2, 3, false] }],\n                            ['bold', 'italic', 'underline', 'strike'],\n                            [{ 'list': 'ordered'}, { 'list': 'bullet' }],\n                            [{ 'align': [] }],\n                            ['link', 'image', 'code-block'],\n                            ['clean']\n                        ],\n                        handlers: {\n                            image: imageHandler\n                        }\n                    }\n                },\n                formats: [\n                    'header', 'bold', 'italic', 'underline', 'strike',\n                    'list', 'bullet', 'align', 'link', 'image', 'code-block'\n                ]\n            });\n\n            // Handle text changes\n            quillRef.current.on('text-change', () => {\n                const html = quillRef.current.root.innerHTML;\n                onChange(html);\n            });\n        }\n\n        // Set initial content\n        if (value && quillRef.current.root.innerHTML !== value) {\n            quillRef.current.root.innerHTML = value;\n        }\n    }, [value, onChange, placeholder]);\n\n    const imageHandler = () => {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n        input.click();\n\n        input.onchange = async () => {\n            const file = input.files[0];\n            if (file) {\n                if (file.size > 5 * 1024 * 1024) { // 5MB limit\n                    toast.error('Image size must be less than 5MB');\n                    return;\n                }\n\n                setIsUploading(true);\n                const formData = new FormData();\n                formData.append('image', file);\n\n                try {\n                    const response = await fetch(`${process.env.REACT_APP_API_URL}/api/upload`, {\n                        method: 'POST',\n                        body: formData,\n                        headers: {\n                            ...getAuthHeader()\n                        }\n                    });\n\n                    if (response.ok) {\n                        const data = await response.json();\n                        const range = quillRef.current.getSelection();\n                        quillRef.current.insertEmbed(range.index, 'image', data.url);\n                        toast.success('Image uploaded successfully');\n                    } else {\n                        throw new Error('Upload failed');\n                    }\n                } catch (error) {\n                    console.error('Image upload failed:', error);\n                    toast.error('Failed to upload image');\n                } finally {\n                    setIsUploading(false);\n                }\n            }\n        };\n    };\n\n    return (\n        <div className=\"relative\">\n            <div className=\"bg-white rounded-lg border border-gray-300\">\n                <div ref={editorRef} className=\"h-64\" />\n            </div>\n            {isUploading && (\n                <div className=\"absolute inset-0 bg-white bg-opacity-75 flex items-center justify-center rounded-lg\">\n                    <div className=\"text-center\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n                        <p className=\"text-sm text-gray-600 mt-2\">Uploading image...</p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RichTextEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}