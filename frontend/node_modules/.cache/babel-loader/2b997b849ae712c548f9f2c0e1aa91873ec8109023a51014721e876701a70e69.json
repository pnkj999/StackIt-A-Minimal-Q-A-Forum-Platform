{"ast":null,"code":"import React,{useState}from'react';import{useForm}from'react-hook-form';import{Link,useNavigate,useLocation}from'react-router-dom';import{useMutation}from'@tanstack/react-query';import toast from'react-hot-toast';import{useAuth}from'../../contexts/AuthContext';import Input from'../UI/Input';import Button from'../UI/Button';import LoadingSpinner from'../UI/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{var _location$state,_location$state$from;const{register,handleSubmit,formState:{errors}}=useForm();const[isLoading,setIsLoading]=useState(false);const{login}=useAuth();const navigate=useNavigate();const location=useLocation();const from=((_location$state=location.state)===null||_location$state===void 0?void 0:(_location$state$from=_location$state.from)===null||_location$state$from===void 0?void 0:_location$state$from.pathname)||'/';const loginMutation=useMutation({mutationFn:async credentials=>{const response=await fetch(`${process.env.REACT_APP_API_URL}/api/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});if(!response.ok){const error=await response.json();throw new Error(error.error||'Login failed');}return response.json();},onSuccess:data=>{login(data.token,data.user);navigate(from,{replace:true});},onError:error=>{toast.error(error.message);}});const onSubmit=async data=>{setIsLoading(true);try{await loginMutation.mutateAsync(data);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md w-full space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mt-6 text-center text-3xl font-extrabold text-gray-900\",children:\"Sign in to your account\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-2 text-center text-sm text-gray-600\",children:[\"Or\",' ',/*#__PURE__*/_jsx(Link,{to:\"/register\",className:\"font-medium text-blue-600 hover:text-blue-500\",children:\"create a new account\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"mt-8 space-y-6\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"block text-sm font-medium text-gray-700\",children:\"Email address\"}),/*#__PURE__*/_jsx(Input,{id:\"email\",type:\"email\",autoComplete:\"email\",...register('email',{required:'Email is required',pattern:{value:/\\S+@\\S+\\.\\S+/,message:'Please enter a valid email address'}}),className:`mt-1 block w-full ${errors.email?'border-red-500':''}`}),errors.email&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.email.message})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block text-sm font-medium text-gray-700\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{id:\"password\",type:\"password\",autoComplete:\"current-password\",...register('password',{required:'Password is required'}),className:`mt-1 block w-full ${errors.password?'border-red-500':''}`}),errors.password&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:errors.password.message})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isLoading,className:\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\",children:isLoading?/*#__PURE__*/_jsx(LoadingSpinner,{}):'Sign in'})})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","useForm","Link","useNavigate","useLocation","useMutation","toast","useAuth","Input","Button","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","Login","_location$state","_location$state$from","register","handleSubmit","formState","errors","isLoading","setIsLoading","login","navigate","location","from","state","pathname","loginMutation","mutationFn","credentials","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","error","json","Error","onSuccess","data","token","user","replace","onError","message","onSubmit","mutateAsync","className","children","to","htmlFor","id","type","autoComplete","required","pattern","value","email","password","disabled"],"sources":["/Users/sam/Downloads/stackit/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useMutation } from '@tanstack/react-query';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Input from '../UI/Input';\nimport Button from '../UI/Button';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst Login = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const [isLoading, setIsLoading] = useState(false);\n    const { login } = useAuth();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const from = location.state?.from?.pathname || '/';\n\n    const loginMutation = useMutation({\n        mutationFn: async (credentials) => {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(credentials),\n            });\n\n            if (!response.ok) {\n                const error = await response.json();\n                throw new Error(error.error || 'Login failed');\n            }\n\n            return response.json();\n        },\n        onSuccess: (data) => {\n            login(data.token, data.user);\n            navigate(from, { replace: true });\n        },\n        onError: (error) => {\n            toast.error(error.message);\n        },\n    });\n\n    const onSubmit = async (data) => {\n        setIsLoading(true);\n        try {\n            await loginMutation.mutateAsync(data);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-md w-full space-y-8\">\n                <div>\n                    <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n                        Sign in to your account\n                    </h2>\n                    <p className=\"mt-2 text-center text-sm text-gray-600\">\n                        Or{' '}\n                        <Link\n                            to=\"/register\"\n                            className=\"font-medium text-blue-600 hover:text-blue-500\"\n                        >\n                            create a new account\n                        </Link>\n                    </p>\n                </div>\n                <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"space-y-4\">\n                        <div>\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                                Email address\n                            </label>\n                            <Input\n                                id=\"email\"\n                                type=\"email\"\n                                autoComplete=\"email\"\n                                {...register('email', {\n                                    required: 'Email is required',\n                                    pattern: {\n                                        value: /\\S+@\\S+\\.\\S+/,\n                                        message: 'Please enter a valid email address',\n                                    },\n                                })}\n                                className={`mt-1 block w-full ${errors.email ? 'border-red-500' : ''}`}\n                            />\n                            {errors.email && (\n                                <p className=\"mt-1 text-sm text-red-600\">{errors.email.message}</p>\n                            )}\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                                Password\n                            </label>\n                            <Input\n                                id=\"password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                {...register('password', {\n                                    required: 'Password is required',\n                                })}\n                                className={`mt-1 block w-full ${errors.password ? 'border-red-500' : ''}`}\n                            />\n                            {errors.password && (\n                                <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\n                            )}\n                        </div>\n                    </div>\n\n                    <div>\n                        <Button\n                            type=\"submit\"\n                            disabled={isLoading}\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\n                        >\n                            {isLoading ? <LoadingSpinner /> : 'Sign in'}\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}